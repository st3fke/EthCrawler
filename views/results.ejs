<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Transaction Results - Loading...</title>
  <link rel="stylesheet" href="./style/resultsstyle.css">
</head>
<body>
  <div class="header">
    <h1>Transaction Results</h1> <a href="/" class="back-link">New Search</a>
  </div>
  
  <!-- Loading Indicator -->
  <div id="loading-indicator" class="loading-indicator">
    <div class="spinner"></div>
    <div>
      <div id="loading-text">Connecting to blockchain...</div>
      <div class="progress-bar">
        <div id="progress-fill" class="progress-fill"></div>
      </div>
    </div>
  </div>
  
  <!-- Balance Overview -->
  <div id="balance-overview" class="balance-overview">
    <div class="balance-section">
      <div class="balance-title">Ethereum Balance</div>
      <div id="balance-amount" class="balance-amount">
        Loading...
      </div>
      <div id="balance-value" class="balance-value">
        Loading...
      </div>
    </div>
    
    <div class="info-section">
      <div class="info-item">
        <span class="info-label">Address:</span>
        <span class="info-value">
          <a href="https://etherscan.io/address/<%= address %>" target="_blank" class="address-link">
            <%= address %>
          </a>
        </span>
      </div>
      <div class="info-item">
        <span class="info-label">Block Range:</span>
        <span class="info-value"><%= startBlock.toLocaleString() %> to <%= currentBlock.toLocaleString() %></span>
      </div>
      <div class="info-item">
        <span class="info-label">Transactions:</span>
        <span id="transaction-count" class="info-value">0</span>
      </div>
    </div>
  </div>
  
  <!-- Live Stats -->
  <div id="live-stats" class="stats-row">
    <div class="stat-item">
      <div class="stat-label">Pages Loaded</div>
      <div id="pages-loaded" class="stat-value">0</div>
    </div>
    <div class="stat-item">
      <div class="stat-label">Current Batch</div>
      <div id="current-batch" class="stat-value">0</div>
    </div>
    <div class="stat-item">
      <div class="stat-label">Loading Speed</div>
      <div id="loading-speed" class="stat-value">0 tx/s</div>
    </div>
  </div>
  
  <!-- Transactions Table -->
  <div id="transactions-container">
    <table id="transactions-table">
      <thead>
        <tr>
          <th>Block</th>
          <th>Date</th>
          <th>From</th>
          <th>To</th>
          <th>Value (ETH)</th>
          <th>Gas Price (Gwei)</th>
          <th>Tx Hash</th>
        </tr>
      </thead>
      <tbody id="transactions-tbody">
        <!-- Transactions will be added here dynamically -->
      </tbody>
    </table>
  </div>
  
  <!-- Scroll Control Button -->
  <button id="scroll-control" class="scroll-control">
    📌 Stay at Top
  </button>
  
  <!-- Messages -->
  <div id="error-message" class="error-message"></div>
  <div id="warning-message" class="warning-message"></div>
  <div id="complete-message" class="complete-message"></div>
  
  <a href="/" class="back-link">New Search</a>
  
  <script>
    // Initialize EventSource for Server-Sent Events
    const eventSource = new EventSource('/transactions-stream/<%= address %>/<%= startBlock %>');
    
    let totalTransactions = 0;
    let startTime = Date.now();
    let pagesLoaded = 0;
    let autoScrollEnabled = false;
    
    // DOM elements
    const loadingIndicator = document.getElementById('loading-indicator');
    const loadingText = document.getElementById('loading-text');
    const balanceOverview = document.getElementById('balance-overview');
    const transactionsContainer = document.getElementById('transactions-container');
    const transactionsTbody = document.getElementById('transactions-tbody');
    const transactionCount = document.getElementById('transaction-count');
    const liveStats = document.getElementById('live-stats');
    const pagesLoadedEl = document.getElementById('pages-loaded');
    const currentBatchEl = document.getElementById('current-batch');
    const loadingSpeedEl = document.getElementById('loading-speed');
    const errorMessage = document.getElementById('error-message');
    const warningMessage = document.getElementById('warning-message');
    const completeMessage = document.getElementById('complete-message');
    const scrollControl = document.getElementById('scroll-control');
    
    // Scroll control functionality
    scrollControl.addEventListener('click', function() {
      autoScrollEnabled = !autoScrollEnabled;
      updateScrollButton();
    });
    
    function updateScrollButton() {
      if (autoScrollEnabled) {
        scrollControl.textContent = '📍 Auto-scroll: ON';
        scrollControl.style.background = '#28a745';
      } else {
        scrollControl.textContent = '📌 Stay at Top';
        scrollControl.style.background = '#007bff';
      }
    }
    
    // Handle different types of messages
    eventSource.onmessage = function(event) {
      const data = JSON.parse(event.data);
      
      switch(data.type) {
        case 'initial':
          handleInitialData(data);
          break;
        case 'transactions':
          handleTransactionBatch(data);
          break;
        case 'warning':
          handleWarning(data);
          break;
        case 'complete':
          handleComplete(data);
          break;
        case 'error':
          handleError(data);
          break;
      }
    };
    
    function handleInitialData(data) {
      loadingText.textContent = 'Loading transactions...';
      
      // Show balance info
      document.getElementById('balance-amount').textContent = `${data.currentBalance} ETH`;
      if (data.ethPrice && data.balanceValue) {
        document.getElementById('balance-value').textContent = 
          `$${data.balanceValue} (@ $${data.ethPrice.toFixed(2)}/ETH)`;
      }
      
      balanceOverview.style.display = 'block';
      liveStats.style.display = 'flex';
      transactionsContainer.style.display = 'block';
      scrollControl.style.display = 'block';
      updateScrollButton();
    }
    
    function handleTransactionBatch(data) {
      pagesLoaded = data.page;
      totalTransactions = data.totalCount;
      
      // Store current scroll position
      const currentScrollPosition = window.scrollY;
      
      // Calculate loading speed
      const elapsedTime = (Date.now() - startTime) / 1000;
      const speed = Math.round(totalTransactions / elapsedTime);
      
      loadingText.textContent = `Loading page ${data.page}... (${data.totalCount} transactions found)`;
      transactionCount.textContent = data.totalCount.toLocaleString();
      pagesLoadedEl.textContent = data.page;
      currentBatchEl.textContent = data.transactions.length;
      loadingSpeedEl.textContent = `${speed} tx/s`;
      
      // Add batch separator every 10 pages
      if (data.page > 1 && data.page % 10 === 1) {
        const separator = document.createElement('tr');
        separator.className = 'batch-separator';
        separator.innerHTML = `<td colspan="7">Batch ${Math.floor(data.page/10)}</td>`;
        transactionsTbody.appendChild(separator);
      }
      
      // Add transactions
      data.transactions.forEach(tx => {
        const row = document.createElement('tr');
        row.className = 'transaction-row';
        row.innerHTML = `
          <td>${tx.blockNumber.toLocaleString()}</td>
          <td>${tx.timestamp}</td>
          <td>
            <a href="https://etherscan.io/address/${tx.from}" target="_blank" class="address-link">
              ${tx.from.substring(0, 8)}...${tx.from.substring(34)}
            </a>
          </td>
          <td>
            ${tx.to ? 
              `<a href="https://etherscan.io/address/${tx.to}" target="_blank" class="address-link">
                ${tx.to.substring(0, 8)}...${tx.to.substring(34)}
              </a>` : 
              'Contract Creation'
            }
          </td>
          <td>${parseFloat(tx.value).toFixed(6)}</td>
          <td>${tx.gasPriceFormatted}</td>
          <td>
            <a href="https://etherscan.io/tx/${tx.hash}" target="_blank" class="address-link">
              ${tx.hash.substring(0, 10)}...
            </a>
          </td>
        `;
        transactionsTbody.appendChild(row);
      });
      
      // Handle scrolling based on user preference
      if (autoScrollEnabled && data.page > 1) {
        window.scrollTo(0, document.body.scrollHeight);
      } else {
        window.scrollTo(0, currentScrollPosition);
      }
    }
    
    function handleWarning(data) {
      warningMessage.style.display = 'block';
      warningMessage.textContent = data.message;
      setTimeout(() => {
        warningMessage.style.display = 'none';
      }, 5000);
    }
    
    function handleComplete(data) {
      loadingIndicator.style.display = 'none';
      
      completeMessage.style.display = 'block';
      completeMessage.textContent = `Complete! Found ${data.totalTransactions.toLocaleString()} transactions.`;
      
      document.title = `Transaction Results - ${data.totalTransactions.toLocaleString()} transactions`;
      scrollControl.style.display = 'none';
      eventSource.close();
    }
    
    function handleError(data) {
      loadingIndicator.style.display = 'none';
      errorMessage.style.display = 'block';
      errorMessage.textContent = `Error: ${data.error}`;
      scrollControl.style.display = 'none';
      eventSource.close();
    }
    
    // Clean up on page unload
    window.addEventListener('beforeunload', function() {
      eventSource.close();
    });
  </script>
</body>
</html>